#!/bin/bash

#
# Possibly lousy assumption:  workspace is two directories up.
#
TOP=$(cd `dirname $0`; /bin/pwd)
. $TOP/catkin_util.sh

#SUBDIRECTORY_OK=1
#. $(git --exec-path)/git-sh-setup

gc_help() {

cat <<EOF
Usage: git catkin [command] ..

commands:

   foreach TYPE [arg0 arg1 ..]

      runs [arg0 arg1 ..] in each directory of type TYPE
      (type in git, svn, hg, all)

   difforigin

      runs "hg outgoing --stat" or "git diff --stat origin/master"
      in the git and hg directories

   remotes

      git remote -v
      hg paths
      svn info | grep URL

   pull

      git pull
      hg  pull -u

   fetch

      git fetch --all
      hg  pull
      svn update

   status

      git status
      hg  status
      svn status

EOF
}

USAGE=$(gc_help)


# set -x

search_up ()
{
    FNAME=$1
    DESTVAR=$2
    if [ -n "$WORKSPACE" ] ; then
        return 0
    fi
    if [ $# -gt 2 ] ; then
        SEARCHDIR=$3
    else
        SEARCHDIR=$(/bin/pwd)
    fi
    while [ 1 ] ; do
        /bin/echo "searchdir=$SEARCHDIR"
        if [ -e $SEARCHDIR/$FNAME ] ; then
            eval $DESTVAR=$SEARCHDIR
            status "Workspace is ${boldon}${yellowf}$WORKSPACE${reset}"
            return 0
        fi
        if [ $SEARCHDIR = "/" ] ; then
            return 1
        fi
        SEARCHDIR=$(dirname $SEARCHDIR)
    done
}

examine_workspace ()
{
    search_up .rosinstall WORKSPACE
    [ -z "$ALLDIRS" ] || return 0
    for gitdir in $WORKSPACE/*/.git
    do
        GITDIRS="$GITDIRS $(dirname $gitdir)"
    done
    for svndir in $WORKSPACE/*/.svn
    do
        SVNDIRS="$SVNDIRS $(dirname $svndir)"
    done
    for hgdir in $WORKSPACE/*/.hg
    do
        HGDIRS="$HGDIRS $(dirname $hgdir)"
    done
    ALLDIRS="$GITDIRS $SVNDIRS $HGDIRS"
}

foreach ()
{
    examine_workspace
    type=${1}
    TYPE=$(echo $type | tr '[:lower:]' '[:upper:]')DIRS
    shift
    DIRS=${!TYPE}
    for d in $DIRS
    do
        /bin/echo "${boldon}===  $type: ${cyanf}$(basename $d)${whitef} ===${reset}"
        cd $d
        eval $JUSTECHO $*
    done
}

gc_status () {
    foreach git git status
    foreach hg hg status
    foreach svn svn status
}

gc_fetch () {
    foreach git git fetch --all
    foreach hg hg pull
    foreach svn svn update
}

gc_pull () {
    foreach git git pull
    foreach hg hg pull -u
    foreach svn svn update
}

gc_difforigin () {
    foreach git git diff --stat origin/master
    foreach hg hg outgoing --stat
    foreach svn svn diff
}

gc_remotes () {
    foreach git git remote -v
    foreach hg hg paths
    foreach svn "svn info | grep URL"
}

CMD=$1
shift
if [ "$CMD" = '-n' ] ; then
    JUSTECHO=/bin/echo
    CMD=$1
else
    JUSTECHO=""
fi

eval gc_$CMD $*
