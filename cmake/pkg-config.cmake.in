if (NOT @PACKAGE_INCLUDE_DIRS@ STREQUAL "")
  set(@PACKAGE_NAME@_INCLUDE_DIRS @PKG_INCLUDE_PREFIX@/@PACKAGE_INCLUDE_DIRS@)
endif()

if (@PACKAGE_NAME@_SOURCE_DIR)
  set(@PACKAGE_NAME@_PYTHONPATH ${@PACKAGE_NAME@_SOURCE_DIR}/@PACKAGE_PYTHONPATH@)
  list(APPEND @PACKAGE_NAME@_INCLUDE_DIRS ${@PACKAGE_NAME@_BINARY_DIR}/gen/cpp)
endif()

foreach(lib @PACKAGE_LIBRARIES@)
  if(@PACKAGE_NAME@_SOURCE_DIR)
    if (NOT TARGET ${lib})
      message(FATAL_ERROR "Looking for ${lib}, source for @PACKAGE_NAME@ is present in workspace, but ${lib} is not a target")
    endif()
    set(onelib ${lib})
  else()
    set(onelib "${lib}-NOTFOUND")
    find_library(onelib ${lib}
      PATHS @PKG_LIB_PREFIX@/lib
      NO_DEFAULT_PATH
      )
    if(NOT onelib)
      message(FATAL_ERROR "Lib ${lib} for @PACKAGE_NAME@ not installed properly")
    endif()
  endif()

  list(APPEND @PACKAGE_NAME@_LIBRARIES ${onelib})
endforeach()

foreach(extra @PACKAGE_CFG_EXTRAS@)
  include(@PKG_CMAKE_DIR@/${extra})
endforeach()

set(@PACKAGE_NAME@_MSG_INCLUDE_DIRS @PKG_MSG_DIRS@)

set(@PACKAGE_NAME@_FOUND TRUE)
